#!/usr/bin/env ruby -w
# @author Eric Weinstein <eric.q.weinstein@gmail.com>

require 'optparse'
require_relative '../lib/ruumba'

options = { arguments: [] }
opts_parser = OptionParser.new do |opts|
  opts.banner = 'Usage: ruumba path/to/ERBs/'

  opts.on('-h', '--help', 'Display this screen') do
    puts opts_parser
    exit
  end

  opts.on('-a', '--auto-gen-config', 'Generate a configuration file acting as a TODO list.') do
    options[:arguments] << '--auto-gen-config'
  end

  opts.on('-t', '--tmp-folder [TEMP_FOLDER]', 'Use this suffix for the temporary folder') do |f|
    options[:tmp_folder] = f
  end

  opts.on('-c', '--config [CONFIG]', 'Use this config for rubocop') do |c|
    options[:arguments] << '--config'
    options[:arguments] << File.expand_path(c)
  end

  opts.on('-D', '--display-cop-names', 'Display cop names') do ||
    options[:arguments] << '--display-cop-names'
  end

  opts.on('-F', '--fail-level [LEVEL]', 'Rubocop fail level') do |l|
    options[:arguments] << '--fail-level'
    options[:arguments] << l
  end

  opts.on('-e', '--disable-ruby-ext', 'Disable auto-append of .rb extension') do
    options[:disable_rb_extension] = true
  end

  opts.on('--only [COP1,COP2,...]', 'Run only the given cop(s).') do |cops|
    options[:arguments] << '--only'
    options[:arguments] << cops
  end

  opts.on('-r', '--require [FILE]', 'Require Ruby file.') do |file|
    options[:arguments] << '--require'
    options[:arguments] << file
  end

  opts.on('-o', '--out [FILE]', 'Write output to a file instead of STDOUT.') do |file|
    options[:arguments] << '--out'
    options[:arguments] << file
  end

  opts.on('-f', '--format [FORMAT]', 'Choose an output formatter.') do |format|
    options[:arguments] << '--format'
    options[:arguments] << format
  end
end

begin
  opts_parser.parse!
rescue OptionParser::InvalidOption => e
  abort "An error occurred: #{e}. Run ruumba -h for help."
end

analyzer = Ruumba::Analyzer.new(options)
exit(analyzer.run)
